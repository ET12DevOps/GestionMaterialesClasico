@model gestionmateriales.Models.OficinaTecnica.GestionMateriales.Proveedor
@{
    ViewBag.Title = "Proveedor";
}
<div class="container-fluid">
    <h1 class="display-4">Proveedores</h1>
    <p>Edita información de proveedor existente en el sistema</p>
</div>
<hr />
<div class="col-md-12">
    <div class="card">
        <div class="card-header">
            Información Proveedor
        </div>
        <div class="card-body">
            @using (@Html.BeginForm("Editar", "Proveedor", new { id = Model.idProveedor }, FormMethod.Post))
            {
                <div class="form-horizontal">
                    <div class="form-group">
                        @Html.LabelFor(model => model.nombre, "Nombre", new { @class = "control-label" })
                        @Html.EditorFor(model => model.nombre, new { htmlAttributes = new { @class = "form-control", maxlength = 45, required = "true", autofocus = "true", title = "Solo se admiten letras.", pattern = "^[A-Za-zñÑáéíóúÁÉÍÓÚ ]+$", autocomplete = "off" } })
                    </div>
                    <div class="form row">
                        <div class="form-group col-md-6">
                            @Html.LabelFor(model => model.cuit, "CUIT", new { @class = "control-label" })
                            @Html.EditorFor(model => model.cuit, new { htmlAttributes = new { @class = "form-control", maxlength = 45, required = "true", title = "Solo se admiten guiones y numeros.", pattern = "^[0-9]{2}[-][0-9]{8}[-][0-9]$", autocomplete = "off" } })
                        </div>
                        <div class="form-group col-md-6">
                            @Html.LabelFor(model => model.razonSocial, "Razón Social", new { @class = "control-label" })
                            @Html.EditorFor(model => model.razonSocial, new { htmlAttributes = new { @class = "form-control", maxlength = 15, required = "true", title = "Solo se admiten letras.", pattern = "^[A-Za-zñÑáéíóúÁÉÍÓÚ ]+$", autocomplete = "off" } })
                        </div>
                    </div>
                    <div class="form row">
                        <div class="form-group col-md-3">
                            @Html.LabelFor(model => model.telefono, "Teléfono", new { @class = "control-label" })
                            @Html.EditorFor(model => model.telefono, new { htmlAttributes = new { @class = "form-control", maxlength = 20, required = "true", title = "Solo se admiten números.", pattern = "^[0-9]+$", autocomplete = "off" } })
                        </div>
                        <div class="form-group col-md-3">
                            @Html.LabelFor(model => model.email, "Correo", new { @class = "control-label" })
                            @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "form-control", maxlength = 50, required = "true", type = "email", autocomplete = "off" } })
                        </div>
                        <div class="form-group col-md-3">
                            @Html.LabelFor(model => model.direccion, "Dirección", new { @class = "control-label" })
                            @Html.EditorFor(model => model.direccion, new { htmlAttributes = new { @class = "form-control", maxlength = 100, required = "true", autocomplete = "off" } })
                        </div>
                        <div class="form-group col-md-3">
                            @Html.LabelFor(model => model.zona, "Zona", new { @class = "control-label" })
                            @Html.EditorFor(model => model.zona, new { htmlAttributes = new { @class = "form-control", maxlength = 30, required = "true", autocomplete = "off" } })
                        </div>
                    </div>
                    <div class="form row">
                        <div class="form-group col-md-6">
                            @Html.LabelFor(model => model.horario, "Horario Atención", new { @class = "control-label" })
                            @Html.EditorFor(model => model.horario, new { htmlAttributes = new { @class = "form-control", maxlength = 20, required = "false", autocomplete = "off" } })
                        </div>
                        <div class="form-group col-md-6">
                            @Html.LabelFor(model => model.nombreContacto, "Contacto", new { @class = "control-label" })
                            @Html.EditorFor(model => model.nombreContacto, new { htmlAttributes = new { @class = "form-control", maxlength = 45, required = "false", title = "Solo se admiten letras.", pattern = "^[A-Za-zñÑáéíóúÁÉÍÓÚ ]+$", autocomplete = "off" } })
                        </div>
                    </div>
                    <div class="row justify-content-between">
                        <div class="col-md-2">
                            <input type="reset" class="btn btn-default btn-block" value="Restaurar" data-toggle="tooltip" data-placement="right" title="Restaura los valores antes de los cambios" />
                        </div>
                        <div class="offset-6 col-md-2">
                            <input type="submit" class="btn btn-primary btn-block" value="Aceptar" data-toggle="tooltip" data-placement="right" title="Confirma la operación" />
                        </div>
                        <div class="col-md-2">
                            <input type="button" class="btn btn-default btn-block" onclick="location.href='../Index'" value="Volver" data-toggle="tooltip" data-placement="right" title="Regresa a la pantalla anterior" />
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
    @if (ViewBag.Result == 0)
    {
        <script type="text/javascript">
            $.notify(
                {
                    message: 'Los datos se guardaron con éxito'
                },
                {
                    type: 'success',
                    animate: {
                        enter: 'animated bounceInDown',
                        exit: 'animated bounceOutUp'
                    },
                    placement: {
                        from: 'top',
                        align: 'center'
                    },
                    offset: {
                        y: 75
                    },
                    delay: 1000
                }
            );
        </script>
    }
    @if (ViewBag.Result == 1)
    {
        <script type="text/javascript">
            $.notify(
                {
                    message: 'El CUIT ya existe, verifique el valor'
                },
                {
                    type: 'danger',
                    animate: {
                        enter: 'animated bounceInDown',
                        exit: 'animated bounceOutUp'
                    },
                    placement: {
                        from: 'top',
                        align: 'center'
                    },
                    offset: {
                        y: 75
                    },
                    delay: 1000
                }
            );
        </script>
    }
</div>
