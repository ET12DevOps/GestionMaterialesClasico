@model gestionmateriales.Models.OficinaTecnica.GestionMateriales.Proveedor
<div class="card shadow">
    <div class="card-body">
        <h1>Proveedores</h1>
        <p>Crea un nuevo proveedor para comprar materiales o herramientas</p>
    </div>
</div>
<br />
<div class="card shadow ">
    <div class="card-body">
        @using (@Html.BeginForm("Agregar", "Proveedor", FormMethod.Post))
        {
            <div class="form-horizontal">
                <div class="form-group">
                    @Html.LabelFor(model => model.nombre, "Nombre", new { @class = "control-label" })
                    @Html.EditorFor(model => model.nombre, new { htmlAttributes = new { @class = "form-control", maxlength = 45, required = "true", autofocus = "true", title = "Solo se admiten letras y números.", pattern = "^[0-9A-Za-zñÑáéíóúÁÉÍÓÚ ]+$", autocomplete = "off" } })
                </div>
                <div class="form row">
                    <div class="form-group col-md-6">
                        @Html.LabelFor(model => model.cuit, "CUIT", new { @class = "control-label" })
                        @Html.EditorFor(model => model.cuit, new { htmlAttributes = new { @class = "form-control", maxlength = 45, required = "true", title = "Solo se admiten guiones y numeros.", pattern = "^[0-9]{2}[-][0-9]{8}[-][0-9]$", autocomplete = "off" } })
                    </div>
                    <div class="form-group col-md-6">
                        @Html.LabelFor(model => model.razonSocial, "Razón Social", new { @class = "control-label" })
                        @Html.EditorFor(model => model.razonSocial, new { htmlAttributes = new { @class = "form-control", maxlength = 15, required = "true", title = "Solo se admiten letras.", pattern = "^[A-Za-zñÑáéíóúÁÉÍÓÚ ]+$", autocomplete = "off" } })
                    </div>
                </div>
                <div class="form row">
                    <div class="form-group col-md-3">
                        @Html.LabelFor(model => model.telefono, "Teléfono", new { @class = "control-label" })
                        @Html.EditorFor(model => model.telefono, new { htmlAttributes = new { @class = "form-control", maxlength = 20, required = "true", title = "Solo se admiten números.", pattern = "^[0-9]+$", autocomplete = "off" } })
                    </div>
                    <div class="form-group col-md-3">
                        @Html.LabelFor(model => model.email, "Correo Electrónico", new { @class = "control-label" })
                        @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "form-control", maxlength = 50, required = "true", type = "email", autocomplete = "off" } })
                    </div>
                    <div class="form-group col-md-3">
                        @Html.LabelFor(model => model.direccion, "Dirección", new { @class = "control-label" })
                        @Html.EditorFor(model => model.direccion, new { htmlAttributes = new { @class = "form-control", maxlength = 100, required = "true", autocomplete = "off" } })
                    </div>
                    <div class="form-group col-md-3">
                        @Html.LabelFor(model => model.zona, "Zona", new { @class = "control-label" })
                        @Html.EditorFor(model => model.zona, new { htmlAttributes = new { @class = "form-control", maxlength = 30, required = "true", autocomplete = "off" } })
                    </div>
                </div>
                <div class="form row">
                    <div class="form-group col-md-6">
                        @Html.LabelFor(model => model.horario, "Horario Atención", new { @class = "control-label" })
                        @Html.EditorFor(model => model.horario, new { htmlAttributes = new { @class = "form-control", maxlength = 20, required = "false", autocomplete = "off" } })
                    </div>
                    <div class="form-group col-md-6">
                        @Html.LabelFor(model => model.nombreContacto, "Contacto", new { @class = "control-label" })
                        @Html.EditorFor(model => model.nombreContacto, new { htmlAttributes = new { @class = "form-control", maxlength = 45, required = "false", title = "Solo se admiten letras.", pattern = "^[A-Za-zñÑáéíóúÁÉÍÓÚ ]+$", autocomplete = "off" } })
                    </div>
                </div>
                <div class="row justify-content-between">
                    <div class="col-2">
                        <input id="btn_limpiar" type="reset" class="btn btn-outline-secondary btn-block" value="Limpiar" title="Vacia los campos del formulario" />
                    </div>
                    <div class="offset-6 col-2">
                        <input id="btn_aceptar" type="submit" class="btn btn-primary btn-block" value="Aceptar" title="Confirma la operación" />
                    </div>
                    <div class="col-2">
                        <a id="btn_cancelar" role="button" class="btn btn-outline-secondary btn-block" href="~/Proveedor" title="Regresa a la pantalla anterior"> Volver</a>
                    </div>
                </div>
            </div>
        }
    </div>
</div>
@if (ViewBag.Result == 0)
{
    <script type="text/javascript">
        $('#nombre').val('');
        $('#cuit').val('');
        $('#razonSocial').val('');
        $('#telefono').val('');
        $('#email').val('');
        $('#direccion').val('');
        $('#zona').val('');
        $('#horario').val('');
        $('#nombreContacto').val('');
        ShowNotificationSuccess('Proveedor');
    </script>
}
@if (ViewBag.Result == 1)
{
    <script type="text/javascript">
        ShowNotificationDanger('Proveedor', 'El CUIT ya existe, verifique el valor');
    </script>
}
