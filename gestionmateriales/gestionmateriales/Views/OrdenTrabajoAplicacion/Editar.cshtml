@model gestionmateriales.Models.OficinaTecnica.Documentos.OrdenTrabajoAplicacion

<h1>Orden de Trabajo de Aplicación</h1>
<p>Editar una orden trabajo de aplicación existente</p>
<div class="card offset-1 col-10">
    <div class="card-body">
        @using (@Html.BeginForm("Editar", "OrdenTrabajoAplicacion", new { id = Model.idOrdenTrabajoAplicacion }, FormMethod.Post))
        {
            <div class="form-horizontal">
                <div class="form row">
                    <div class="form-group col-md-6">
                        @Html.LabelFor(model => model.numero, "Número", new { @class = "control-label" })
                        @Html.EditorFor(model => model.numero, new { htmlAttributes = new { @class = "form-control", min = 1, autofocus = "true", required = "true", autocomplete = "off" } })
                    </div>
                    <div class="form-group col-md-6">

                        @Html.LabelFor(model => model.nombre, "Nombre", new { @class = "control-label" })
                        @Html.EditorFor(model => model.nombre, new { htmlAttributes = new { @class = "form-control", maxlength = 70, required = "true", autocomplete = "off" } })
                    </div>
                </div>
                <div class="form row">
                    <div class="form-group col-md-6">
                        @Html.LabelFor(model => model.turno, "Turno", new { @class = "control-label" })
                        @Html.DropDownList("idTurno", null, htmlAttributes: new { @class = "form-control" })
                    </div>
                    <div class="form-group col-md-6">
                        @Html.LabelFor(model => model.fecha, "Fecha", new { @class = "control-label" })
                        @Html.EditorFor(model => model.fecha, "{0:yyyy-MM-dd}", new { htmlAttributes = new { @class = "form-control", required = "true", type = "date", autocomplete = "off" } })
                    </div>
                </div>
                <div class="form row">
                    <div class="form-group col-md-6">
                        @Html.LabelFor(model => model.responsable, "Responsable", new { @class = "control-label" })
                        @Html.DropDownList("idResponsable", null, htmlAttributes: new { @class = "form-control" })
                    </div>
                    <div class="form-group col-md-6">
                        @Html.LabelFor(model => model.jefeSeccion, "Jefe de Sección", new { @class = "control-label" })
                        @Html.DropDownList("idJefeSeccion", null, htmlAttributes: new { @class = "form-control" })
                    </div>
                </div>
                <br />
                <div class="row">
                    <div class="col-md-2">
                        <input type="reset" class="btn btn-default btn-block" value="Restaurar" data-toggle="tooltip" data-placement="right" title="Restaura los valores antes de los cambios" />
                    </div>
                    <div class="offset-6 col-md-2">
                        @*<input type="submit" class="btn btn-primary btn-block" value="Editar Materiales" />*@
                        <button type="submit" class="btn btn-primary btn-block"><i class="far fa-edit"></i> Materiales</button>
                    </div>
                    <div class="col-md-2">
                        <input type="button" class="btn btn-default btn-block" onclick="window.history.back();" value="Volver" data-toggle="tooltip" data-placement="right" title="Regresa a la pantalla anterior" />
                    </div>
                </div>

            </div>
        }
    </div>
    @if (ViewBag.Result == 1)
    {
        <script type="text/javascript">
            $.notify.defaults({ globalPosition: 'bottom rigth' });
            $.notify(
                "El número de orden de trabajo ya existe, verifique el valor",
                "error",
                {
                    position: "right bottom",
                    globalPosition: "right bottom"
                }
            );
        </script>
    }
</div>
